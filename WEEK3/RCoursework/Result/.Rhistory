densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
PredatorMean <- mean(log(MyDF$Predator.mass))
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
getwd()
setwd("../RCoursework/Code")
setwd("..zhangxiaoya/RCoursework/Code")
setwd("..zhangxiaoya/RCoursework/Code")
getwd()
setwd
setwd("RCoursework/Code/")
setwd("RCoursework/Code")
setwd("RCoursework/Code")
setwd("RCoursework/Code/")
setwd("RCoursework/Code/")
getwd()
setwd("RCoursework/Code/")
setwd("RCoursework/Code/")
setwd("/Users/zhangxiaoya/RCoursework/Code/")
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
library(lattice)
dplyr::glimpse(MyDF)
pdf("../Pred_Lattice.pdf",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("../Pred_Lattice.pdf",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
png("../Pred_Lattice.png",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
MyData <- as.matrix(read.csv("../data/PoundHillData.csv",header = F,  stringsAsFactors = F))
MyMetaData <- read.csv("../data/PoundHillMetaData.csv",header = T,  sep=";", stringsAsFactors = F)
setwd("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Result/")
PredatorMean <- mean(log(MyDF$Predator.mass))
PreyMean <- mean(log(MyDF$Prey.mass))
PredatorPreyMean <-mean(log(MyDF$Predator.mass/MyDF$Prey.mass))
PredatorMedian <- median(log(MyDF$Predator.mass))
PreyMedian <- median(log(MyDF$Prey.mass))
PredatorPreyMedian <- median(log(MyDF$Predator.mass/MyDF$Prey.mass))
mean <- as.data.frame(c(PredatorMean,PreyMean,PredatorPreyMean))
median <- as.data.frame(c(PredatorMedian,PreyMedian,PredatorPreyMedian))
table <- data.frame(mean,median)
colnames(table) <-c("mean","median")
setwd("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Result/")
write.csv(table, "PP_Results.csv")
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("../Pred_Lattice.pdf",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
# densityplot(~log10(Prey.mass) | Type.of.feeding.interaction, data=MyDF)
# densityplot(log10(MyDF$Predator.mass),log10(MyDF$Prey.mass), xlab = "Predator Mass (g)", ylab = "Prey Mass (g)")
PredatorMean <- mean(log(MyDF$Predator.mass))
PreyMean <- mean(log(MyDF$Prey.mass))
PredatorPreyMean <-mean(log(MyDF$Predator.mass/MyDF$Prey.mass))
PredatorMedian <- median(log(MyDF$Predator.mass))
PreyMedian <- median(log(MyDF$Prey.mass))
PredatorPreyMedian <- median(log(MyDF$Predator.mass/MyDF$Prey.mass))
mean <- as.data.frame(c(PredatorMean,PreyMean,PredatorPreyMean))
median <- as.data.frame(c(PredatorMedian,PreyMedian,PredatorPreyMedian))
table <- data.frame(mean,median)
colnames(table) <-c("mean","median")
setwd("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Result/")
write.csv(table, "PP_Results.csv")
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("../Pred_Lattice.pdf",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("../Pred_Lattice.pdf",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
setwd("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Code")
load("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Code/KeyWestAnnualMeanTemperature.Rdata")
setwd("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Code")
d = read.csv("trees.csv", header = TRUE)
TreeHeight <- function(degrees, distance){
radians <- degrees * pi / 180
height <- distance * tan(radians)
print(paste("Tree height is:", height))
return (height)
}
height = TreeHeight(d$Angle.degrees, d$Distance.m)
d$Tree.Height.m = height
setwd("/Users/zhangxiaoya/RCoursework/Result")
write.csv(d, "TreeHts.csv")
print(kendall)
pdf("../PredPrey_Lattice.pdf",11.7,8.3)
pdf("../Prey_Lattice.pdf",11.7,8.3)
pdf("../PredPrey_Lattice.pdf",11.7,8.3)
pdf("../Pred_Lattice.pdf",11.7,8.3)
pdf("..Result/PredPrey_Lattice.pdf",11.7,8.3)
pdf("..Result/Prey_Lattice.pdf",11.7,8.3)
pdf("..Result/Pred_Lattice.pdf",11.7,8.3)
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("..Result/Pred_Lattice.pdf",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("..Result/Prey_Lattice.pdf",11.7,8.3)
densityplot(~log10(Prey.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("..Result/PredPrey_Lattice.pdf",11.7,8.3)
densityplot(log10(MyDF$Predator.mass),log10(MyDF$Prey.mass), xlab = "Predator Mass (g)", ylab = "Prey Mass (g)")
pdf("..Result/Prey_Lattice.pdf",11.7,8.3)
pdf("..Result/PredPrey_Lattice.pdf",11.7,8.3)
setwd("/Users/zhangxiaoya/")
setwd("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/")
pdf("..Result/Prey_Lattice.pdf",11.7,8.3)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Prey_Lattice.pdf",11.7,8.3)
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Pred_Lattice.pdf",11.7,8.3)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Prey_Lattice.pdf",11.7,8.3)
densityplot(~log10(Prey.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/PredPrey_Lattice.pdf",11.7,8.3)
densityplot(log10(MyDF$Predator.mass),log10(MyDF$Prey.mass), xlab = "Predator Mass (g)", ylab = "Prey Mass (g)")
densityplot(~log10(MyDF$Predator.mass),log10(MyDF$Prey.mass), xlab = "Predator Mass (g)", ylab = "Prey Mass (g)")
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Pred_Lattice.pdf",11.7,8.3)
densityplot(~log10(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Prey_Lattice.pdf",11.7,8.3)
densityplot(~log10(Prey.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/PredPrey_Lattice.pdf",11.7,8.3)
densityplot(log10(MyDF$Predator.mass),log10(MyDF$Prey.mass), xlab = "Predator Mass (g)", ylab = "Prey Mass (g)")
PredatorMean <- mean(log(MyDF$Predator.mass))
PreyMean <- mean(log(MyDF$Prey.mass))
PredatorPreyMean <-mean(log(MyDF$Prey.mass/MyDF$Predator.mass))
PredatorMedian <- median(log(MyDF$Predator.mass))
PreyMedian <- median(log(MyDF$Prey.mass))
PredatorPreyMedian <- median(log(MyDF$Prey.mass/MyDF$Predator.mass))
mean <- as.data.frame(c(PredatorMean,PreyMean,PredatorPreyMean))
median <- as.data.frame(c(PredatorMedian,PreyMedian,PredatorPreyMedian))
table <- data.frame(mean,median)
colnames(table) <-c("mean","median")
setwd("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Result/")
write.csv(table, "PP_Results.csv")
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Pred_Lattice.pdf",11.7,8.3)
densityplot(~log10(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
graphics.off();
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
str(MyDF)
head(MyDF)
require(dplyr)
library(lattice)
dplyr::glimpse(MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Pred_Lattice.pdf",11.7,8.3)
densityplot(~log10(Predator.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/Prey_Lattice.pdf",11.7,8.3)
densityplot(~log10(Prey.mass) | Type.of.feeding.interaction, data=MyDF)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/PredPrey_Lattice.pdf",11.7,8.3)
densityplot(log10(MyDF$Predator.mass),log10(MyDF$Prey.mass), xlab = "Predator Mass (g)", ylab = "Prey Mass (g)")
graphics.off();
MyDF <- as.data.frame(read.csv("../data/EcolArchives-E089-51-D1.csv"))
# barplot
qplot(Predator.lifestage, data = MyDF, geom = "bar")
install.packages(ggplot2)
install.packages(ggplot2)
install.packages(qplot2)
options(CRAN="https://.cloud.r-project.org/");
install.packages("ggplot2")
require(ggplot2)
qplot(Prey.mass, Predator.mass, data = MyDF)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF)
qplot(Prey.mass, Predator.mass, data = MyDF)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, colour = Type.of.feeding.interaction)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, colour = Type.of.feeding.interaction, asp = 1)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, shape = Type.of.feeding.interaction, asp = 1)
qplot(log(Prey.mass), log(Predator.mass),
data = MyDF, colour = "red")
require(ggplot2)
qplot(Prey.mass, Predator.mass, data = MyDF)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, colour = Type.of.feeding.interaction)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, colour = Type.of.feeding.interaction, asp = 1)
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, shape = Type.of.feeding.interaction, asp = 1)
qplot(log(Prey.mass), log(Predator.mass),
data = MyDF, colour = "red")
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, colour = I("red"))
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, size = 3) #with ggplot size mapping
qplot(log(Prey.mass), log(Predator.mass),  data = MyDF, size = I(3)) #no mapping
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, shape= I(3))
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, colour = Type.of.feeding.interaction, alpha = I(.5))
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, geom = c("point", "smooth"))
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, geom = c("point", "smooth")) + geom_smooth(method = "lm")
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, geom = c("point", "smooth"),
colour = Type.of.feeding.interaction) + geom_smooth(method = "lm")
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, geom = c("point", "smooth"),
colour = Type.of.feeding.interaction) + geom_smooth(method = "lm",fullrange = TRUE)
qplot(Type.of.feeding.interaction, log(Prey.mass/Predator.mass), data = MyDF)
qplot(Type.of.feeding.interaction, log(Prey.mass/Predator.mass), data = MyDF, geom = "boxplot")
qplot(log(Prey.mass/Predator.mass), data = MyDF, geom =  "histogram")
qplot(log(Prey.mass/Predator.mass), data = MyDF, geom =  "histogram",
fill = Type.of.feeding.interaction)
a <- read.table("../data/Results.txt", header = TRUE)
head(a)
a$ymin <- rep(0, dim(a)[1]) # append a column of zeros
# Print the first linerange
p <- ggplot(a)
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y1,
size = (0.5)
),
colour = "#E69F00",
alpha = 1/2, show.legend = FALSE)
# Print the second linerange
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y2,
size = (0.5)
),
colour = "#56B4E9",
alpha = 1/2, show.legend = FALSE)
# Print the third linerange:
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y3,
size = (0.5)
),
colour = "#D55E00",
alpha = 1/2, show.legend = FALSE)
# Annotate the plot with labels:
p <- p + geom_text(data = a, aes(x = x, y = -500, label = Label))
# now set the axis labels, remove the legend, and prepare for bw printing
p <- p + scale_x_continuous("My x axis",
breaks = seq(3, 5, by = 0.05)) +
scale_y_continuous("My y axis") +
theme_bw() +
theme(legend.position = "none")
p
# Print the first linerange
p <- ggplot(a)
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y1,
size = (0.5)
),
colour = "#E69F00",
alpha = 1/2, show.legend = FALSE)
# Print the first linerange
p <- ggplot(a)
a$ymin <- rep(0, dim(a)[1]) # append a column of zeros
require(ggplot2)
# Print the first linerange
p <- ggplot(a)
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y1,
size = (0.5)
),
colour = "#E69F00",
alpha = 1/2, show.legend = FALSE)
a <- read.table("../data/Results.txt", header = TRUE)
head(a)
a$ymin <- rep(0, dim(a)[1]) # append a column of zeros
x <- seq(0, 100, by = 0.1)
y <- -4. + 0.25 * x +
rnorm(length(x), mean = 0., sd = 2.5)
# and put them in a dataframe
my_data <- data.frame(x = x, y = y)
# perform a linear regression
my_lm <- summary(lm(y ~ x, data = my_data))
# plot the data
p <-  ggplot(my_data, aes(x = x, y = y,
colour = abs(my_lm$residual))
) +
geom_point() +
scale_colour_gradient(low = "black", high = "red") +
theme(legend.position = "none") +
scale_x_continuous(
expression(alpha^2 * pi / beta * sqrt(Theta)))
# add the regression line
p <- p + geom_abline(
intercept = my_lm$coefficients[1][1],
slope = my_lm$coefficients[2][1],
colour = "red")
# throw some math on the plot
p <- p + geom_text(aes(x = 60, y = 0,
label = "sqrt(alpha) * 2* pi"),
parse = TRUE, size = 6,
colour = "blue")
p
x <- seq(0, 100, by = 0.1)
y <- -4. + 0.25 * x +
rnorm(length(x), mean = 0., sd = 2.5)
# and put them in a dataframe
my_data <- data.frame(x = x, y = y)
# perform a linear regression
my_lm <- summary(lm(y ~ x, data = my_data))
# plot the data
p <-  ggplot(my_data, aes(x = x, y = y,
colour = abs(my_lm$residual))
) +
geom_point() +
scale_colour_gradient(low = "black", high = "red") +
theme(legend.position = "none") +
scale_x_continuous(
expression(alpha^2 * pi / beta * sqrt(Theta)))
# add the regression line
p <- p + geom_abline(
intercept = my_lm$coefficients[1][1],
slope = my_lm$coefficients[2][1],
colour = "red")
# throw some math on the plot
p <- p + geom_text(aes(x = 60, y = 0,
label = "sqrt(alpha) * 2* pi"),
parse = TRUE, size = 6,
colour = "blue")
p
library(ggthemes)
p <- ggplot(MyDF, aes(x = log(Predator.mass), y = log(Prey.mass),
colour = Type.of.feeding.interaction )) +
geom_point(size=I(2), shape=I(10)) + theme_bw()
p + geom_rangeframe() + # now fine tune the geom to Tufte's range frame
theme_tufte() # and theme to Tufte's minimal ink theme
require(ggplot2)
library(ggthemes)
p <- ggplot(MyDF, aes(x = log(Predator.mass), y = log(Prey.mass),
colour = Type.of.feeding.interaction )) +
geom_point(size=I(2), shape=I(10)) + theme_bw()
p + geom_rangeframe() + # now fine tune the geom to Tufte's range frame
theme_tufte() # and theme to Tufte's minimal ink theme
load("/Users/zhangxiaoya/CMEECoursework/WEEK3/RCoursework/Code/KeyWestAnnualMeanTemperature.Rdata")
x <- data.frame(ats[1])
y <- data.frame(ats[2])
spearman <- cor(x,y,method="spearman")
pearson <- cor(x,y,method="pearson")
kendall <- cor(x,y,method="kendall")
print(spearman)
print(pearson)
print(kendall)
pdf("/Users/zhangxiaoya/CMEECourseWork/WEEK3/RCoursework/Result/PP_Regress.pdf",11.7,8.3)
graphics.off();
install.packages("maps")
install.packages("maps")
